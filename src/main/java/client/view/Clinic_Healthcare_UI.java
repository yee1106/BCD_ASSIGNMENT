/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.view;

/**
 *
 * @author acer
 */
import static client.Main.addOrderPage;
import static client.Main.userList;
import static client.Main.MANUFACTURER;
import static client.Main.current_user;
import static client.Main.patient_vaccination_record;
import static client.Main.track_view;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ComfirmOrder;
import model.Order;
import model.ReadyShippingDetails;
import util.Block;
import util.Blockchain;

public class Clinic_Healthcare_UI extends javax.swing.JFrame {

  /**
   * Creates new form Clinic_Healthcare_UI
   */
  DefaultTableModel tableModel;
  Object rowData[] = new Object[4];
  List<Block> currentUserInvolvedBlock;
  
  public Clinic_Healthcare_UI() {
    initComponents();
    tableModel = (DefaultTableModel) orderTable.getModel();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane2 = new javax.swing.JScrollPane();
    jTable1 = new javax.swing.JTable();
    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    addOrderButton = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    orderTable = new javax.swing.JTable();
    track_view_button = new javax.swing.JButton();
    logoutButton = new javax.swing.JButton();
    addPatientRecordButton = new javax.swing.JButton();

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    jScrollPane2.setViewportView(jTable1);

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setResizable(false);

    jPanel1.setBackground(new java.awt.Color(51, 51, 51));

    jLabel1.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
    jLabel1.setForeground(new java.awt.Color(204, 204, 255));
    jLabel1.setText("Retailer Order & Track Vaccine");

    addOrderButton.setBackground(new java.awt.Color(204, 255, 204));
    addOrderButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    addOrderButton.setText("Add new order");
    addOrderButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addOrderButtonActionPerformed(evt);
      }
    });

    orderTable.setBackground(new java.awt.Color(255, 255, 204));
    orderTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    orderTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Order Batch ID", "Vaccine Type", "Quantity", "Manufacturer"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    orderTable.setRowHeight(32);
    orderTable.getTableHeader().setReorderingAllowed(false);
    jScrollPane1.setViewportView(orderTable);
    if (orderTable.getColumnModel().getColumnCount() > 0) {
      orderTable.getColumnModel().getColumn(0).setResizable(false);
      orderTable.getColumnModel().getColumn(1).setResizable(false);
      orderTable.getColumnModel().getColumn(2).setResizable(false);
      orderTable.getColumnModel().getColumn(3).setResizable(false);
    }

    track_view_button.setBackground(new java.awt.Color(255, 204, 204));
    track_view_button.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    track_view_button.setText("Track & View");
    track_view_button.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        track_view_buttonActionPerformed(evt);
      }
    });

    logoutButton.setBackground(new java.awt.Color(255, 102, 102));
    logoutButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    logoutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logoutIcon.png"))); // NOI18N
    logoutButton.setText(" Log Out");
    logoutButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        logoutButtonActionPerformed(evt);
      }
    });

    addPatientRecordButton.setBackground(new java.awt.Color(255, 204, 0));
    addPatientRecordButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    addPatientRecordButton.setText("Add Patient Record");
    addPatientRecordButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addPatientRecordButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap(181, Short.MAX_VALUE)
        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(125, 125, 125))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addGap(29, 29, 29)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(track_view_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(addOrderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(addPatientRecordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(52, 52, 52))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(34, 34, 34)
        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(37, 37, 37)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(28, 28, 28)
            .addComponent(addOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(track_view_button, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(addPatientRecordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(83, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

  private void addOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderButtonActionPerformed
    addOrderPage.resetManufacturerComboBox();
    for (Map.Entry<String, String> user: userList.entrySet()){
       if(MANUFACTURER.equals(user.getValue())){
         addOrderPage.setManufacturerComboBox(user.getKey());
       }
    }
    addOrderPage.setVisible(true);
    this.setVisible(false);
  }//GEN-LAST:event_addOrderButtonActionPerformed

  private void track_view_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_track_view_buttonActionPerformed
   boolean hasInvolvedBlock = false;
   int selectedRowIndex = orderTable.getSelectedRow();
   if(selectedRowIndex == -1 && currentUserInvolvedBlock.size() != 0){
     orderTable.setRowSelectionInterval(0, 0);
     selectedRowIndex = 0;
   }
   for(Block block : currentUserInvolvedBlock){
     if(block.getHeader().getBatch_id() == (Long)orderTable.getValueAt(selectedRowIndex, 0)){
       String data = "";
       for(Object statusTranx : block.getTranx().getTranxLst()){
         if(statusTranx instanceof Order){
            data = data + ((Order) statusTranx).statusTrackToString() + "\n";
            track_view.setInfoTrackText(((Order) statusTranx).infoTrackToString());
         }
         else if(statusTranx instanceof ComfirmOrder){
            data = data + ((ComfirmOrder) statusTranx).statusTrackToString() + "\n";
         }
         else if(statusTranx instanceof ReadyShippingDetails){
            data = data + ((ReadyShippingDetails) statusTranx).readyShippingStepTrackToString() + "\n";
          }
       }
       track_view.setStatusTrackText(data);
       hasInvolvedBlock = true;
       break;
     }
   }
   if(hasInvolvedBlock){
    track_view.setComeFromPage(this, false);
    this.setVisible(false);
    track_view.setVisible(true);
   }
   else if(!hasInvolvedBlock){
     JOptionPane.showMessageDialog(null, "No Record!!", "Error Message", JOptionPane.ERROR_MESSAGE); 
   }
   else if(orderTable.getSelectedRow() == -1){
     JOptionPane.showMessageDialog(null, "Please select one record!!", "Error Message", JOptionPane.ERROR_MESSAGE); 
   }
   
  }//GEN-LAST:event_track_view_buttonActionPerformed

  private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
    System.exit(0);
  }//GEN-LAST:event_logoutButtonActionPerformed

  private void addPatientRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientRecordButtonActionPerformed
  patient_vaccination_record.setVisible(true);
  patient_vaccination_record.setDefaultDate();
  this.setVisible(false);
  }//GEN-LAST:event_addPatientRecordButtonActionPerformed

  public void configureOrderTable(){
    productDetailTableSortByProductId();
    List<Block> blockchain = Blockchain.DB;
    currentUserInvolvedBlock = new ArrayList();
    blockchain.forEach(block ->{
      if(block.getHeader().getInvolvedPerson() != null){
        for(String userName : block.getHeader().getInvolvedPerson()){
          if(userName.equals(current_user.getUserName())){
            currentUserInvolvedBlock.add(block);
            rowData[0] = block.getHeader().getBatch_id();
            for(Object orderDetails : block.getTranx().getTranxLst()){
              if(orderDetails instanceof Order){
                rowData[1] = ((Order) orderDetails).getVaccineType();
                rowData[2] = ((Order) orderDetails).getQuantity();
                rowData[3] = ((Order) orderDetails).getTo();
                tableModel.addRow(rowData);
                break;
              }
            }
            break;
          }
        }
      }
    });
    if(orderTable.getRowCount()>0)
      orderTable.setRowSelectionInterval(0,0);
  }
  
  public void tableAddOrder(long batch_id, String vaccine_type, int quantity, String manufacturer, Block newBlock){
    rowData = new Object[4];
    rowData[0] = batch_id;
    rowData[1] = vaccine_type;
    rowData[2] = quantity;
    rowData[3] = manufacturer;
    tableModel.addRow(rowData);
    currentUserInvolvedBlock.add(newBlock);
  }
  
  private void productDetailTableSortByProductId(){
    TableRowSorter<TableModel> sorter = new TableRowSorter<>(tableModel);
    orderTable.setRowSorter(sorter);
    ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<>();
    //sort based on product name
    int columnIndexToSort = 0;
    sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));
    sorter.setSortKeys(sortKeys);
    sorter.sort();
  }
  
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Clinic_Healthcare_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Clinic_Healthcare_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Clinic_Healthcare_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Clinic_Healthcare_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new Clinic_Healthcare_UI().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addOrderButton;
  private javax.swing.JButton addPatientRecordButton;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTable jTable1;
  private javax.swing.JButton logoutButton;
  private javax.swing.JTable orderTable;
  private javax.swing.JButton track_view_button;
  // End of variables declaration//GEN-END:variables
}
