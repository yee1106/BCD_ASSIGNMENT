/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package client.view;

import model.*;
import util.Block;
import util.Blockchain;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.util.ArrayList;
import java.util.List;

import static client.Main.*;

/**
 * @author yeech
 */
public class DistributorPage extends javax.swing.JFrame {

    /**
     * Creates new form DistributorPage
     */


    DefaultTableModel tableModel;
    Object[] rowData = new Object[4];
    List<Block> currentUserInvolvedBlock;
    public User currentInvolveManufacturer;
    public Block selectedBlock;

    public DistributorPage() {
        initComponents();
        tableModel = (DefaultTableModel) orderTable.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        viewTrackButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logOutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(56, 62, 60));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 204));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        orderTable.setBackground(new java.awt.Color(255, 255, 204));
        orderTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Batch ID", "Vaccine Type", "Quantity", "Order By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTable.setRowHeight(32);
        orderTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(orderTable);

        viewTrackButton.setBackground(new java.awt.Color(97, 175, 239));
        viewTrackButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        viewTrackButton.setForeground(new java.awt.Color(255, 255, 255));
        viewTrackButton.setText("View  & Track");
        viewTrackButton.setBorder(null);
        viewTrackButton.setBorderPainted(false);
        viewTrackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTrackButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(70, 71, 117));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Distributor Page");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        logOutButton.setBackground(new java.awt.Color(255, 51, 51));
        logOutButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logoutIcon.png"))); // NOI18N
        logOutButton.setText("Log Out ");
        logOutButton.setBorder(null);
        logOutButton.setBorderPainted(false);
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewTrackButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logOutButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(viewTrackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void viewTrackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTrackButtonActionPerformed
        boolean hasInvolvedBlock = false;
        boolean isComfirmOrder = false;
        boolean isReadyShippingStep = false;
        boolean isUpdatedButtonVisible = false;
        boolean isConfirmShipping = false;
        boolean isShipping = false;
        int selectedRowIndex = orderTable.getSelectedRow();
        if (selectedRowIndex == -1 && currentUserInvolvedBlock.size() != 0) {
            orderTable.setRowSelectionInterval(0, 0);
            selectedRowIndex = 0;
        }
        for (Block block : currentUserInvolvedBlock) {
            if (block.getHeader().getBatch_id() == (Long) orderTable.getValueAt(selectedRowIndex, 0)) {
                selectedBlock = block;
                String data = "";
                String info = "";
                for (Object statusTranx : block.getTranx().getTranxLst()) {
                    if (statusTranx instanceof Order) {
                        data = data + ((Order) statusTranx).statusTrackToString() + "\n";
                        info = info + ((Order) statusTranx).manufacturerInfoTrackToString() + "\n";
                    } else if (statusTranx instanceof ComfirmOrder) {
                        data = data + ((ComfirmOrder) statusTranx).statusTrackToString() + "\n";
                        //String status = ((ComfirmOrder) statusTranx).getStatus();
                    } else if (statusTranx instanceof ReadyShippingDetails) {
                        data = data + ((ReadyShippingDetails) statusTranx).readyShippingStepTrackToString() + "\n";
                        info = info + ((ReadyShippingDetails) statusTranx).shippingOrderInfo() + "\n";
                        isReadyShippingStep = true;
                    } else if(statusTranx instanceof ConfirmShipping){
                        data = data + ((ConfirmShipping)statusTranx).statusTrackToString()+"\n";
                        isConfirmShipping = true;
                    } else if(statusTranx instanceof  ShippingDetail){
                        data = data + ((ShippingDetail)statusTranx).statusTrackToString()+"\n";
                        isShipping =true;
                    }
                }

                distributorViewOrderPage.setStatusTrackTextArea(data);
                distributorViewOrderPage.setInfoTextArea(info);
                hasInvolvedBlock = true;
                break;
            }
        }
        if (hasInvolvedBlock) {
            this.setVisible(false);
            distributorViewOrderPage.setVisible(true);
            //track_view.setComeFromPage(this, true);
            if(isConfirmShipping){
                distributorViewOrderPage.acceptOrderButton.setVisible(false);
                distributorViewOrderPage.declineOrderButton.setVisible(false);
                distributorViewOrderPage.verifySignatureButton.setVisible(false);
            }
            if(isShipping){
                distributorViewOrderPage.updateTrackingButton.setVisible(false);
            }

        } else if (!hasInvolvedBlock) {
            JOptionPane.showMessageDialog(null, "No Record!!", "Error Message", JOptionPane.ERROR_MESSAGE);
        } else if (orderTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Please select one record!!", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_viewTrackButtonActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_logOutButtonActionPerformed

    public void configureOrderTable() {
        productDetailTableSortByProductId();
        List<Block> blockchain = Blockchain.DB;
        currentUserInvolvedBlock = new ArrayList<>();
        blockchain.forEach(block -> {
            if (block.getHeader().getInvolvedPerson() != null) {
                for (String userName : block.getHeader().getInvolvedPerson()) {
                    if (userName.equals(current_user.getUserName())) {
                        currentUserInvolvedBlock.add(block);
                        rowData[0] = block.getHeader().getBatch_id();
                        for (Object orderDetails : block.getTranx().getTranxLst()) {
                            if (orderDetails instanceof Order) {
                                rowData[1] = ((Order) orderDetails).getVaccineType();
                                rowData[2] = ((Order) orderDetails).getQuantity();
                                rowData[3] = ((Order) orderDetails).getFrom();
                                tableModel.addRow(rowData);
                                break;
                            }
                        }
                        break;
                    }
                }
            }
        });
        if (orderTable.getRowCount() > 0)
            orderTable.setRowSelectionInterval(0, 0);
    }

    private void productDetailTableSortByProductId() {
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(tableModel);
        orderTable.setRowSorter(sorter);
        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<>();
        //sort based on product name
        int columnIndexToSort = 0;
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));
        sorter.setSortKeys(sortKeys);
        sorter.sort();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DistributorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DistributorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DistributorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DistributorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DistributorPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton viewTrackButton;
    // End of variables declaration//GEN-END:variables
}
